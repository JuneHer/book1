

from flask import Flask, request
import mysql.connector
from mysql.connector import Error

app = Flask(__name__)

# DB 연결 함수
def get_db_connection():
    try:
        connection = mysql.connector.connect(
            host="{{ db_host }}",
            user="{{ db_user }}",
            password="{{ db_password }}",
            database="{{ db_name }}"
        )
        return connection
    except Error as e:
        print(f"Database connection error: {e}")
        return None

# DB 초기화
def init_db():
    try:
        # 먼저 데이터베이스 생성
        conn = mysql.connector.connect(
            host="{{ db_host }}",
            user="{{ db_user }}",
            password="{{ db_password }}"
        )
        cursor = conn.cursor()
        cursor.execute("CREATE DATABASE IF NOT EXISTS {{ db_name }}")
        cursor.close()
        conn.close()
        
        # 테이블 생성
        conn = get_db_connection()
        if conn:
            cursor = conn.cursor()
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS messages (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    msg TEXT NOT NULL,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                )
            """)
            conn.commit()
            cursor.close()
            conn.close()
            print("Database initialized successfully")
    except Error as e:
        print(f"Database initialization error: {e}")

# 앱 시작 시 DB 초기화
init_db()

@app.route("/")
def index():
    return "Hello from {{ env }}! Connected to DB: {{ db_host }}"

@app.route("/add", methods=["POST"])
def add():
    conn = get_db_connection()
    if not conn:
        return "Database connection failed", 500
    
    cursor = conn.cursor()
    data = request.form.get("msg", "default message")
    cursor.execute("INSERT INTO messages (msg) VALUES (%s)", (data,))
    conn.commit()
    cursor.close()
    conn.close()
    return "Inserted: " + data

@app.route("/list")
def list_messages():
    conn = get_db_connection()
    if not conn:
        return {"error": "Database connection failed"}, 500
    
    cursor = conn.cursor()
    cursor.execute("SELECT id, msg, created_at FROM messages")
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    
    messages = [{"id": row[0], "msg": row[1], "created_at": str(row[2])} for row in rows]
    return {"messages": messages}

if __name__ == "__main__":
    app.run(host="0.0.0.0", port={{ app_port }})

    